{"version":3,"file":"static/js/747.103125f0.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Input/Input.styled.js","components/Input/Input.jsx","components/Form/Form.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsItem/ContactsItem.styled.js","components/Modal/Modal.styled.js","components/Modal/ButtonClose/ButtonClose.styled.js","components/Modal/ButtonClose/ButtonClose.jsx","components/Modal/Modal.jsx","components/ContactsItem/ContactsButtons/ContactsButtons.styled.js","components/ContactsItem/ContactsButtons/ContactsButtons.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactsPanel.jsx","pages/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form.attrs(({ autoComplete }) => ({\n  autocomplete: autoComplete,\n}))`\n  width: 30vw;\n  padding: 20px 10px;\n  display: inline-flex;\n  gap: 30px;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  line-height: 35px;\n  font-size: 24px;\n  color: #e0cccc;\n  cursor: pointer;\n`;\n\nexport const InputStyled = styled.input.attrs(({autoFocus}) => ({\n  required: true,\n  autoFocus,\n}))`\n  width: 95%;\n  padding: 7px 15px;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  box-shadow: 0px 0px 2px 0px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 0px 0px 2px 0px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 0px 0px 2px 0px rgba(0, 0, 0, 0.75);\n  font-size: 18px;\n  line-height: 25px;\n  background-color: #142a40;\n  color: #e0cccc;\n  &:focus {\n    border: none;\n    outline: none;\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.75) inset;\n    -webkit-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.75) inset;\n    -moz-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.75) inset;\n  }\n  &:valid {\n    box-shadow: 0px 0px 8px 0px rgb(30, 210, 141);\n    -webkit-box-shadow: 0px 0px 8px 0px rgb(30, 210, 141);\n    -moz-box-shadow: 0px 0px 8px 0px rgb(30, 210, 141);\n  }\n  &:focus:invalid {\n    box-shadow: 0px 0px 8px 0px rgb(210, 57, 30);\n    -webkit-box-shadow: 0px 0px 8px 0px rgb(210, 57, 30);\n    -moz-box-shadow: 0px 0px 8px 0px rgb(210, 57, 30);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { LabelStyled, InputStyled } from './Input.styled';\n\nexport const Input = ({ text = '', type, name, pattern, title, autoFocus }) => {\n  return (\n    <LabelStyled>\n      {text}\n      <InputStyled\n        type={type}\n        name={name}\n        pattern={pattern}\n        title={title}\n        autoFocus={autoFocus}\n      />\n    </LabelStyled>\n  );\n};\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  autoFocus: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\nimport { Button } from '../Button/Button';\nimport { FormStyled } from './Form.styled';\nimport { Input } from '../Input/Input';\n\nexport const Form = ({ params1, params2, onSubmit, autoComplete }) => {\n  const {\n    text1,\n    type1,\n    name1,\n    pattern1,\n    title1,\n    text2,\n    type2,\n    name2,\n    pattern2,\n    title2,\n    buttonText,\n  } = params1;\n  return (\n    <FormStyled onSubmit={onSubmit} autoComplete={autoComplete}>\n      <Input\n        text={text1}\n        type={type1}\n        name={name1}\n        pattern={pattern1}\n        title={title1}\n        autoFocus={true}\n      />\n      <Input\n        text={text2}\n        type={type2}\n        name={name2}\n        pattern={pattern2}\n        title={title2}\n      />\n      {params2 && (\n        <Input\n          text={params2.text}\n          type={params2.type}\n          name={params2.name}\n          pattern={params2.pattern}\n          title={params2.title}\n        />\n      )}\n      <Button>{buttonText}</Button>\n    </FormStyled>\n  );\n};\nForm.propTypes = {\n  params1: PropTypes.shape({\n    text1: PropTypes.string.isRequired,\n    type1: PropTypes.string.isRequired,\n    name1: PropTypes.string.isRequired,\n    pattern1: PropTypes.string.isRequired,\n    title1: PropTypes.string.isRequired,\n    text2: PropTypes.string.isRequired,\n    type2: PropTypes.string.isRequired,\n    name2: PropTypes.string.isRequired,\n    pattern2: PropTypes.string.isRequired,\n    title2: PropTypes.string.isRequired,\n    buttonText: PropTypes.string.isRequired,\n  }).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  autoComplete: PropTypes.string,\n  params2: PropTypes.shape({\n    text: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    pattern: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 15px;\n  font-size: 20px;\n`;\n","import styled from 'styled-components';\n\n\nexport const Contact = styled.li`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  justify-content: space-between;\n  padding: 7px 15px;\n  border-radius: 4px;\n  border: none;\n  background-color: rgba(251, 255, 255, 0);\n  cursor: ${({ cursor }) => (cursor ? cursor : 'auto')};\n  box-shadow: 0px 0px 2px 0px rgba(177, 221, 244, 0.816);\n  -webkit-box-shadow: 0px 0px 2px 0px rgba(177, 221, 244, 0.816);\n  -moz-box-shadow: 0px 0px 2px 0px rgba(177, 221, 244, 0.816);\n  font-weight: 700;\n  transition: transform 300ms linear;\n  &:hover {\n    box-shadow: 0px 0px 5px 0px rgba(177, 221, 244, 0.816);\n    -webkit-box-shadow: 0px 0px 5px 0px rgba(177, 221, 244, 0.816);\n    -moz-box-shadow: 0px 0px 5px 0px rgba(177, 221, 244, 0.816);\n    transform: scale(1.05);\n  }\n`;\n\n","import styled from 'styled-components';\n\nexport const ModalStyled = styled.div.attrs({ id: 'modalBox' })`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  height: auto;\n  background-color: #37546d;\n  border-radius: 4px;\n  box-shadow: 0px 0px 7px 2px rgb(224, 255, 255);\n  -webkit-box-shadow: 0px 0px 7px 2px rgb(224, 255, 255);\n  -moz-box-shadow: 0px 0px 7px 2px rgb(224, 255, 255);\n  font-size: 26px;\n  & > form > button:hover {\n    transform: scale(1.02);\n    box-shadow: 0px 0px 1px 2px rgb(224, 255, 255);\n    -webkit-box-shadow: 0px 0px 1px 2px rgb(224, 255, 255);\n    -moz-box-shadow: 0px 0px 1px 2px rgb(224, 255, 255);\n  }\n  & > li:hover {\n    transform: scale(1);\n  }\n`;\nexport const OverlayStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.9);\n  & > button {\n    top: 20vh;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 50px;\n    height: 50px;\n  }\n  & > button:hover {\n    transform: translateX(-50%);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ButtonCloseStyled = styled.button.attrs({ type: 'button' })`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, 0.2);\n  color: #757575;\n  border: none;\n  cursor: pointer;\n  transition: transform 300ms linear;\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0px 0px 4px 0px rgba(224, 204, 204, 0.893);\n    -webkit-box-shadow: 0px 0px 4px 0px rgba(224, 204, 204, 0.893);\n    -moz-box-shadow: 0px 0px 4px 0px rgba(224, 204, 204, 0.893);\n    &:hover svg {\n      color: red;\n    }\n  }\n  &:active {\n    transform: scale(0.8);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FiX } from 'react-icons/fi';\nimport { ButtonCloseStyled } from './ButtonClose.styled';\n\nexport const ButtonClose = ({ onClose }) => {\n  return (\n    <ButtonCloseStyled onClick={onClose}>\n      <FiX size=\"30\" />\n    </ButtonCloseStyled>\n  );\n};\n\nButtonClose.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { OverlayStyled, ModalStyled } from './Modal.styled';\nimport { ButtonClose } from './ButtonClose/ButtonClose';\n\nconst modalRoot = document.querySelector('#modal-root');\nexport const Modal = ({ children, onClose, buttonOnModal }) => {\n  useEffect(() => {\n    const closeByEsc = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.document.querySelector('body').style.overflow = 'hidden';\n\n    window.addEventListener('keydown', closeByEsc);\n    return () => {\n      window.removeEventListener('keydown', closeByEsc);\n      window.document.querySelector('body').style.overflow = 'scroll';\n    };\n  });\n  const closeByClick = e => {\n    if (\n      e.target.nodeName !== 'FORM' &&\n      e.target.nodeName !== 'INPUT' &&\n      e.target.nodeName !== 'BUTTON' &&\n      e.target.nodeName !== 'LABEL' &&\n      e.target.nodeName !== 'LI' &&\n      e.target.nodeName !== 'path' &&\n      e.target.nodeName !== 'svg' &&\n      e.target.id !== 'modalBox'\n    ) {\n      onClose();\n      return;\n    }\n  };\n\n  return createPortal(\n    <OverlayStyled onClick={closeByClick}>\n      {!buttonOnModal && <ButtonClose onClose={onClose} />}\n      <ModalStyled>\n        {buttonOnModal && <ButtonClose onClose={onClose} />}\n        {children}\n      </ModalStyled>\n    </OverlayStyled>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  buttonOnModal: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button.attrs({ type: 'button' })`\n  display: inline-flex;\n  align-items: center;\n  background-color: ${({ bgcl }) => (bgcl ? bgcl : '#37546d')};\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  transition: transform 200ms linear;\n  &:hover {\n    > svg {\n      fill: #ea0e1dd0;\n    }\n    transform: scale(1.5);\n    box-shadow: 0px 0px 4px 0px rgba(177, 221, 244, 0.816) inset;\n    -webkit-box-shadow: 0px 0px 4px 0px rgba(177, 221, 244, 0.816) inset;\n    -moz-box-shadow: 0px 0px 4px 0px rgba(177, 221, 244, 0.816) inset;\n  }\n\n  &:active {\n    box-shadow: 0px 0px 2px 0px rgba(234, 14, 29, 0.816) inset;\n    -webkit-box-shadow: 0px 0px 2px 0px rgba(234, 14, 29, 0.816) inset;\n    -moz-box-shadow: 0px 0px 2px 0px rgba(234, 14, 29, 0.816) inset;\n  }\n`;\n\nexport const ContactPhoneLink = styled.a.attrs(({ tel }) => ({\n  href: `tel:${tel}`,\n}))`\n  display: inline-flex;\n  align-items: center;\n  padding: 5px 10px;\n  border-radius: 4px;\n  transition: transform 200ms linear;\n  &:hover {\n    > svg {\n      fill: #9cf2a9d0;\n    }\n    transform: scale(1.5);\n    box-shadow: 0px 0px 4px 0px rgba(177, 221, 244, 0.816) inset;\n    -webkit-box-shadow: 0px 0px 4px 0px rgba(177, 221, 244, 0.816) inset;\n    -moz-box-shadow: 0px 0px 4px 0px rgba(177, 221, 244, 0.816) inset;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { FiPhoneCall } from 'react-icons/fi';\n\nimport { ButtonStyled, ContactPhoneLink } from './ContactsButtons.styled';\n\nexport const ButtonDelete = ({ bgcl, onDelete }) => (\n  <ButtonStyled bgcl={bgcl} onClick={onDelete}>\n    <MdDeleteForever size=\"25\" color=\"#757575\" />\n  </ButtonStyled>\n);\n\nexport const ButtonCall = ({ number }) => (\n  <ContactPhoneLink tel={number}>\n    <FiPhoneCall size=\"20\" color=\"#757575\" />\n  </ContactPhoneLink>\n);\n\nButtonDelete.propTypes = {\n  bgcl: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n};\n\nButtonCall.propTypes = {\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { deleteContact } from 'redux/contacts';\nimport { useDispatch } from 'react-redux';\nimport { Contact } from './ContactsItem.styled';\nimport { Modal } from 'components/Modal/Modal';\nimport { ButtonCall, ButtonDelete } from './ContactsButtons/ContactsButtons';\nexport const ContactsItem = ({ name, number, id }) => {\n  const [visible, setVisible] = useState(false);\n  const dispatch = useDispatch();\n\n  const openModal = () => setVisible(true);\n  const onDelete = () => {\n    dispatch(deleteContact(id));\n    setVisible(false);\n  };\n  const onClose = () => setVisible(false);\n\n  return (\n    <>\n      <Contact cursor=\"pointer\" onClick={openModal}>\n        {name}: {number} <ButtonCall number={number} />\n      </Contact>\n      {visible && (\n        <Modal onClose={onClose}>\n          <ButtonDelete bgcl=\"rgba(0, 0, 0, 0.1)\" onDelete={onDelete} />\n          <Contact>\n            {name}: {number}{' '}\n          </Contact>\n          <ButtonCall number={number} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { List } from './ContactsList.styled';\nimport { ContactsItem } from '../ContactsItem/ContactsItem';\nimport { useContacts } from 'redux/hooks';\nexport const Contacts = () => {\n  const { renderData } = useContacts();\n  return renderData.length > 0 ? (\n    <List>\n      {renderData.map(({ name, number, id }) => (\n        <ContactsItem key={id} name={name} number={number} id={id} />\n      ))}\n    </List>\n  ) : (\n    <h2>🤷‍♂️Сontacts containing such symbols are not available...</h2>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  line-height: 35px;\n  font-size: 24px;\n  color: #e0cccc;\n  cursor: pointer;\n`;\n\nexport const InputStyled = styled.input.attrs({\n  autoFocus: true,\n  placeholder: 'Find contacts by name',\n})`\n  padding: 7px 15px;\n  border-radius: 4px;\n  border: none;\n  background-color: rgba(251, 255, 255, 0);\n  cursor: pointer;\n  box-shadow: 0px 0px 2px 0px rgba(177, 221, 244, 0.816);\n  -webkit-box-shadow: 0px 0px 2px 0px rgba(177, 221, 244, 0.816);\n  -moz-box-shadow: 0px 0px 2px 0px rgba(177, 221, 244, 0.816);\n  font-size: 24px;\n  color: #e0cccc;\n\n  &:focus {\n    border: none;\n    background-color: #142a40;\n    outline: none;\n    box-shadow: 0px 0px 4px 0px rgba(177, 221, 244, 0.816) inset;\n    -webkit-box-shadow: 0px 0px 4px 0px rgba(177, 221, 244, 0.816) inset;\n    -moz-box-shadow: 0px 0px 4px 0px rgba(177, 221, 244, 0.816) inset;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filtered } from 'redux/filterSlice';\nimport { useContacts } from 'redux/hooks';\nimport { LabelStyled, InputStyled } from './Filter.styled';\n\nexport const Filter = ({ offSearch }) => {\n  const dispatch = useDispatch();\n  const { filterValue } = useContacts();\n\n  const filterOff = () => {\n    offSearch();\n  };\n  const handleChange = e => {\n    dispatch(filtered(e.target.value));\n  };\n  return (\n    <>\n      <LabelStyled>\n        <InputStyled\n          onChange={handleChange}\n          onBlur={filterOff}\n          value={filterValue}\n        />\n      </LabelStyled>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  offSearch: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Button } from './Button/Button';\nimport { ButtonsWraper } from './Button/Button.styled';\nimport { FiPlus, FiSearch, FiX, FiList } from 'react-icons/fi';\n\nexport const ContactsPanel = ({\n  handleClick,\n  onSearch,\n  onContactsOpen,\n  onContactsClose,\n  visibleOpenButton,\n  visibleCloseSearchButton,\n  visibleAddButton,\n}) => {\n  return (\n    <ButtonsWraper>\n      {' '}\n      {visibleAddButton && (\n        <Button onClick={handleClick}>\n          <FiPlus size=\"20\" />\n        </Button>\n      )}\n      {visibleOpenButton && (\n        <Button onClick={onContactsOpen}>\n          <FiList size=\"20\" />\n        </Button>\n      )}\n      {visibleCloseSearchButton && (\n        <Button onClick={onSearch}>\n          <FiSearch size=\"20\" />\n        </Button>\n      )}\n      {visibleCloseSearchButton && (\n        <Button onClick={onContactsClose}>\n          <FiX size=\"20\" />\n        </Button>\n      )}\n    </ButtonsWraper>\n  );\n};\n\nContactsPanel.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  onSearch: PropTypes.func.isRequired,\n  onContactsOpen: PropTypes.func.isRequired,\n  onContactsClose: PropTypes.func.isRequired,\n  visibleOpenButton: PropTypes.bool.isRequired,\n  visibleCloseSearchButton: PropTypes.bool.isRequired,\n  visibleAddButton: PropTypes.bool.isRequired,\n};\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { addContact, fetchContacts } from 'redux/contacts';\nimport { Form } from 'components/Form/Form';\nimport { Contacts } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { NotifyError } from 'components/Notify';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\nimport { ContactsPanel } from 'components/ContactsPanel';\n\nimport { filtered } from 'redux/filterSlice';\nimport { useContacts } from 'redux/hooks';\n\nconst params = {\n  text1: 'Name',\n  type1: 'text',\n  name1: 'name',\n  pattern1: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n  title1:\n    \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  text2: 'Number',\n  type2: 'tel',\n  name2: 'number',\n  pattern2:\n    '\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}',\n  title2:\n    'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  buttonText: 'Add Contact',\n};\n\nconst ContactsView = () => {\n  const dispatch = useDispatch();\n  const { contactsData, error } = useContacts();\n  const [modalVisible, setModalVisible] = useState(false);\n  const [filtervisible, setFilterVisible] = useState(false);\n  const [visible, setVisible] = useState(true);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  useEffect(() => {\n    if (error) NotifyError(error);\n  }, [error]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value\n      .split(' ')\n      .map(element => element[0].toUpperCase() + element.slice(1).toLowerCase())\n      .join(' ');\n    const number = form.elements.number.value;\n    if (contactsData.find(contact => contact.name === name)) {\n      NotifyError(`${name} is already in contacts`);\n      form.reset();\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n    setModalVisible(false);\n  };\n  const handleClick = () => {\n    setModalVisible(true);\n  };\n  const onSearch = () => setFilterVisible(true);\n  const offSearch = () => setFilterVisible(false);\n  const onModalClose = () => setModalVisible(false);\n  const contactsOpen = () => setVisible(false);\n  const contactsClose = () => {\n    dispatch(filtered(''));\n    setVisible(true);\n  };\n  const visibleOpenButton = contactsData.length !== 0 && visible;\n  const visibleCloseSearchButton =\n    contactsData.length !== 0 && !visible && !filtervisible;\n  const visibleAddButton = !filtervisible;\n\n  return (\n    <>\n      <ContactsPanel\n        handleClick={handleClick}\n        onSearch={onSearch}\n        onContactsOpen={contactsOpen}\n        onContactsClose={contactsClose}\n        visibleOpenButton={visibleOpenButton}\n        visibleCloseSearchButton={visibleCloseSearchButton}\n        visibleAddButton={visibleAddButton}\n      />\n      {contactsData.length === 0 && <h3>Phonebook is empty</h3>}\n      {contactsData.length !== 0 && (\n        <>\n          {filtervisible && <Filter offSearch={offSearch} />}\n          {!visible && <Contacts />}\n        </>\n      )}\n      {modalVisible && (\n        <Modal onClose={onModalClose} buttonOnModal={modalVisible}>\n          <Form params1={params} onSubmit={handleSubmit} autoComplete=\"off\" />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default ContactsView;\n"],"names":["FormStyled","styled","autocomplete","autoComplete","LabelStyled","InputStyled","required","autoFocus","Input","text","type","name","pattern","title","Form","params1","params2","onSubmit","text1","type1","name1","pattern1","title1","text2","type2","name2","pattern2","title2","buttonText","Button","List","Contact","cursor","ModalStyled","id","OverlayStyled","ButtonCloseStyled","ButtonClose","onClose","onClick","size","modalRoot","document","querySelector","Modal","children","buttonOnModal","useEffect","closeByEsc","e","code","window","style","overflow","addEventListener","removeEventListener","createPortal","target","nodeName","ButtonStyled","bgcl","ContactPhoneLink","tel","href","ButtonDelete","onDelete","color","ButtonCall","number","ContactsItem","useState","visible","setVisible","dispatch","useDispatch","deleteContact","Contacts","renderData","useContacts","length","map","placeholder","Filter","offSearch","filterValue","onChange","filtered","value","onBlur","ContactsPanel","handleClick","onSearch","onContactsOpen","onContactsClose","visibleOpenButton","visibleCloseSearchButton","visibleAddButton","params","contactsData","error","modalVisible","setModalVisible","filtervisible","setFilterVisible","fetchContacts","NotifyError","preventDefault","form","elements","split","element","toUpperCase","slice","toLowerCase","join","find","contact","reset","addContact"],"sourceRoot":""}